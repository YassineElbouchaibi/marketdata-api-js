/**
 * Copyright (C) 2011-2017 Barchart, Inc. <http://www.barchart.com/>
 *
 * All rights reserved. Licensed under the OSI BSD License.
 *
 * http://www.opensource.org/licenses/bsd-license.php
 */

syntax = "proto3";

package org.openfeed;

option java_multiple_files = true;
option java_generate_equals_and_hash = true;
option optimize_for = SPEED;

import "openfeed_instrument.proto";
import "openfeed.proto";

// ///////////
// Enums
// //////////

enum Result {
  UNKNOWN_RESULT = 0;
  SUCCESS = 1;
  INVALID_SYMBOL = 116;
  INVALID_MARKET_ID = 117;
  INVALID_EXCHANGE = 118;
  INVALID_CHANNEL_ID = 119;
  MALFORMED_MESSAGE = 120;
  UNEXPECTED_MESSAGE = 121;
  NOT_SUBSCRIBED = 122;
  DUPLICATE_SUBSCRIPTION = 123;
  INVALID_CREDENTIALS = 124;
  INSUFFICIENT_PRIVILEGES = 125;    
  AUTHENTICATION_REQUIRED = 126;    
  GENERIC_FAILURE = 127;
}

enum Service {
  UNKNOWN_SERVICE = 0;
  REAL_TIME = 1;
  DELAYED = 2;
  REAL_TIME_SNAPSHOT = 3;
  DELAYED_SNAPSHOT = 4;
  END_OF_DAY = 5;
}

enum SubscriptionType {
    // Quote, trades, volume, etc..
	QUOTE = 0;
	DEPTH_PRICE = 1;
	DEPTH_ORDER = 2;
	TRADES = 3;
	CUMLATIVE_VOLUME = 4;
	OHLC = 5;
}

////////////////////
// Serivce Messages
///////////////////
message Status {
  Result result = 1;
  string message = 2;
  Service service = 3;
}

message LoginRequest {
  sint64 correlationId = 1;
  string username = 2;
  string password = 3;
}

message LoginResponse {
  sint64 correlationId = 1;
  Status status = 2;
  string token = 3;
}

message LogoutRequest  {
  sint64 correlationId = 1;
  string token = 3;
}

message LogoutResponse {
  sint64 correlationId = 1;
  Status status = 2;
}

// Requests Instrument Definition(s)
message InstrumentRequest {
  sint64 correlationId = 1;
  string token = 2;
  oneof request {
   string symbol = 10;
   sint64 marketId = 11;
   string exchange = 12;
   sint32 channelId = 13;
  }
}

message InstrumentResponse {
  sint64 correlationId = 1;
  Status status = 2;
}

// Requests Instrument References, returns InstrumentReferenceResponse
message InstrumentReferenceRequest {
  sint64 correlationId = 1;
  string token = 2;
  oneof request {
   string symbol = 10;
   sint64 marketId = 11;
   string exchange = 12;
   sint32 channelId = 13;
  }
}

message InstrumentReference {
   sint32 channelId = 1;
   sint64 marketId = 2;
   string symbol = 3;
   string exchange = 4;
   string ddfSymbol = 5;
   string ddfExchange = 6; 
   string ddfBaseCode = 7; 
}
message InstrumentReferenceResponse {
  sint64 correlationId = 1;
  Status status = 2;
  InstrumentReference reference = 5;
}

message SubscriptionRequest {
  /// Client-assigned id for this request.  Response will include same id
  sint64 correlationId = 1;
  string token = 2;
  /// Preferred service (realtime or delayed).
  Service service = 3;
  bool unsubscribe = 4;
  repeated Request requests = 5;
  message Request {
    oneof data {
       string symbol = 1;
       sint64 marketId = 2;
       string exchange = 3;
       sint32 channelId = 4;
    }
    SubscriptionType subscriptionType = 10;
    /// 0 = send only current snapshot, else send at interval seconds 
    sint32 snapshotIntervalSeconds = 11;
   }
}

message SubscriptionResponse {
  sint64 correlationId = 1;
  Status status = 2;
  string symbol = 3;
  sint64 marketId = 4;
  string exchange = 5;
  sint32 channelId = 6;
  SubscriptionType subscriptionType = 7;
}

// Socket interface
message OpenfeedGatewayRequest {
  oneof data {
    LoginRequest loginRequest = 1;
    LogoutRequest logoutRequest = 2;
    SubscriptionRequest subscriptionRequest = 3;
    InstrumentRequest instrumentRequest = 4;
    InstrumentReferenceRequest instrumentReferenceRequest = 5;
  }
}

message OpenfeedGatewayMessage {
  oneof data {
    LoginResponse loginResponse = 1;
    LogoutResponse logoutResponse = 2;
    InstrumentResponse instrumentResponse = 3;
    InstrumentReferenceResponse instrumentReferenceResponse = 4;
    SubscriptionResponse subscriptionResponse = 5;
    HeartBeat heartBeat = 6;
    InstrumentDefinition instrumentDefinition = 7;
    MarketSnapshot marketSnapshot = 8;
    MarketUpdate marketUpdate = 9;
    CumulativeVolume cumulativeVolume = 10;
    Ohlc ohlc = 11;
  }
}


